<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.6/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://unpkg.com/flickity@2/dist/flickity.min.css">

    <link rel="stylesheet" href="~/Assets/CSS/style.css" />
    <title>Parfume Store</title>
</head>

<body>
    @await Component.InvokeAsync("Header")

    @RenderBody()
    @await Component.InvokeAsync("Footer")

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.6/dist/js/bootstrap.bundle.min.js" integrity="sha384-j1CDi7MgGQ12Z7Qab0qlWQ/Qqz24Gc6BM0thvEMVjHnfYGF0rmFCozFSxQBxwHKO" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.6/js/bootstrap.bundle.min.js"></script>
    <script src="https://unpkg.com/flickity@2/dist/flickity.pkgd.min.js"></script>
</body>





<script src="~/Assets/JS/Navbar.js"></script>
<script src="~/Assets/JS/Login.js"></script>
<script src="~/Assets/JS/Footer.js"></script>

<form id="antiForgeryForm" style="display:none;">
    @Html.AntiForgeryToken()
</form>
</html>


<script>
     function initializeCountdowns() {
         const timers = document.querySelectorAll('.countdown-timer');

         timers.forEach(timer => {
             const endDateStr = timer.getAttribute('data-enddate');
             const endDate = new Date(endDateStr);

             const parent = timer.closest('.countdown-title');
             const shopNowBtn = parent?.querySelector('.shop-now-btn');
             const productId = shopNowBtn?.getAttribute('data-product-id');

             if (!productId) {
                 console.warn("⚠️ Product ID tapılmadı!");
                 return;
             }

             function updateCountdown() {
                 const now = new Date();
                 const diff = endDate - now;

                 if (diff <= 0) {
                     timer.innerHTML = "<strong>Time's up!</strong>";

                     fetch(`/Admin/FeaturedProduct/RestoreOriginalPriceAndRemoveFromFeatured?productId=${encodeURIComponent(productId)}`, {
                         method: 'POST',
                         headers: {
                             'RequestVerificationToken': getRequestVerificationToken()
                         }
                     })
                         .then(response => {
                             if (response.ok) {
                                 console.log('✅ Featured product silindi və qiymət bərpa olundu.');
                                 // İstəsən, bitmiş məhsulun DOM elementini də silə bilərsən:
                                 // parent.closest('.row')?.remove();
                             } else {
                                 console.error('❌ Serverdən xəta gəldi.');
                             }
                         })
                         .catch(error => {
                             console.error('❌ Fetch xətası:', error);
                         });

                     clearInterval(interval);
                     return;
                 }

                 const days = Math.floor(diff / (1000 * 60 * 60 * 24));
                 const hours = Math.floor((diff / (1000 * 60 * 60)) % 24);
                 const minutes = Math.floor((diff / (1000 * 60)) % 60);
                 const seconds = Math.floor((diff / 1000) % 60);

                 timer.querySelector('.countdown-day').textContent = String(days).padStart(2, '0');
                 timer.querySelector('.countdown-hour').textContent = String(hours).padStart(2, '0');
                 timer.querySelector('.countdown-minunt').textContent = String(minutes).padStart(2, '0');
                 timer.querySelector('.countdown-second').textContent = String(seconds).padStart(2, '0');
             }

             updateCountdown();
             const interval = setInterval(updateCountdown, 1000);
         });
     }

     function getRequestVerificationToken() {
         const tokenElement = document.querySelector('input[name="__RequestVerificationToken"]');
         return tokenElement ? tokenElement.value : '';
     }

     document.addEventListener('DOMContentLoaded', initializeCountdowns);

</script>

<script>

    document.addEventListener("DOMContentLoaded", function () {
        const plusButtons = document.querySelectorAll("button[onclick^='addToBasket']");

        plusButtons.forEach(button => {
            button.addEventListener("click", function () {
                const span = button.parentElement.querySelector(".qty-display");
                if (span) {

                    const productId = this.dataset.productId;

                    fetch('/Basket/AddToBasket?id=' + productId, {
                        method: 'POST'
                    })
                        .then(res => res.json())
                        .then(data => {
                            if (data.success) {
                                // Count və Total Price yenilənir
                                document.getElementById("basket-count").innerText = data.count;
                                updateProductUI(productId)
                            } else {
                                alert("Səbətə əlavə edilə bilmədi.");
                            }
                        })
                        .catch(err => console.error("Xəta:", err));
                    let count = parseInt(span.innerText.trim());
                    span.innerText = count + 1;


                }
            });


        });

    });
         



    function addToBasket(id) {
        event.preventDefault();
        fetch('/Basket/AddToBasket?id=' + id, {
            method: 'POST'
        })
            .then(res => res.json())
            .then(data => {
                if (data.success) {
                    fetch('/Basket/GetCountAndTotal')
                        .then(res => res.json())
                        .then(data => {
                            document.getElementById("basket-count").innerText = data.count;
                            document.getElementById("basketViewTotal").innerText = data.total.toFixed(2) + " $";
                            updateProductUI(id);
                        });
                } else {
                    console.log('Məhsul əlavə edilə bilmədi.');
                }
            });
    }





    function RemoveToBasket(id) {
        fetch('/Basket/Deacrease?id=' + id, {
            method: 'POST'
        })
            .then(res => res.json())
            .then(data => {
                if (data.success) {
                    // Backenddə 1 ədəd azaldı, indi UI-da dəyişiklik edək:
                    const countElement = document.getElementById(`product-count-${id}`);

                    if (!countElement) {
                        // Say elementi yoxdursa səhifəni yenilə
                        location.reload();
                        return;
                    }

                    // Cari sayı ədədi kimi götür
                    let count = parseInt(countElement.innerText);

                    // Backenddə azaltdıq, indi UI-da da 1 ədəd azaldırıq
                    count = count - 1;

                    if (count <= 0) {
                        // 0 və ya aşağı düşürsə, satırı sil
                        const row = document.getElementById(`product-row-${id}`);
                        if (row) row.remove();
                    } else {
                        // Sayı yenilə
                        countElement.innerText = count;

                        // Qiyməti yenilə (məsələn, unitPrice * count)
                        updateProductUI(id);
                    }

                    // Ümumi səbət məlumatlarını yenilə
                    fetch('/Basket/GetCountAndTotal')
                        .then(res => res.json())
                        .then(data2 => {
                            document.getElementById("basket-count").innerText = data2.count;
                            document.getElementById("basketViewTotal").innerText = data2.total.toFixed(2) + " $";
                            document.getElementById("basket-total").innerText = data2.total.toFixed(2) + " $";
                        });

                } else {
                    console.log('Məhsul azaldıla bilmədi.');
                }
            })
            .catch(err => console.error('Xəta baş verdi:', err));
    }

    function updateProductUI(id) {
        const countElement = document.getElementById(`product-count-${id}`);
        const priceElement = document.querySelector(`[data-product-id="${id}"][data-price]`);
        const totalElement = document.getElementById(`product-total-${id}`);

        if (!countElement || !priceElement || !totalElement) {
            console.warn("Element tapılmadı:", { countElement, priceElement, totalElement });
            return;
        }

        const count = parseInt(countElement.innerText);
        const price = parseFloat(priceElement.getAttribute("data-price"));
        const totalPrice = (count * price).toFixed(2);

        totalElement.innerText = `$${totalPrice}`;
    }







    document.addEventListener("DOMContentLoaded", function () {
        const wishlistButtons = document.querySelectorAll(".add-to-wishlist");

        wishlistButtons.forEach(button => {
            button.addEventListener("click", function () {
                const productId = this.dataset.productId;

                fetch('/Wishlist/AddToWishList?id=' + productId, {
                    method: 'POST'
                })
                    .then(res => res.json())
                    .then(data => {
                        if (data.success) {
                            fetch('/Wishlist/WishlistCount')
                                .then(res => res.json())
                                .then(data => {
                                    document.getElementById("wishlist-count").innerText = data.count;
                                });
                        } else {
                            alert("Məhsul əlavə edilə bilmədi.");
                        }
                    })
                    .catch(err => console.error("Xəta:", err));
            });
        });
    });






    document.addEventListener("DOMContentLoaded", function () {
        const basketButtons = document.querySelectorAll(".add-to-basket");

        basketButtons.forEach(button => {
            button.addEventListener("click", function () {
                const productId = this.dataset.productId;

                fetch('/Basket/AddToBasket?id=' + productId, {
                    method: 'POST'
                })
                    .then(res => res.json())
                    .then(data => {
                        if (data.success) {
                            // Count və Total Price yenilənir
                            document.getElementById("basket-count").innerText = data.count;
                            document.getElementById("basket-total").innerText = data.total.toFixed(2) + " ₼";
                        } else {
                            alert("Səbətə əlavə edilə bilmədi.");
                        }
                    })
                    .catch(err => console.error("Xəta:", err));
            });
        });
    });

</script>